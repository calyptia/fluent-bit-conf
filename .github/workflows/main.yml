# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: fluent-linter-action
  # You may pin to the exact commit or the version.
  # uses: calyptia/fluent-linter-action@9a36867d3757ca7d5d54b5ce4f5af8e31f976672
  uses: calyptia/fluent-linter-action@v0.2.0
  with:
    # Head over to [Calyptia Cloud](https://cloud.calyptia.com/) and login (you can use your GitHub account). On the left panel, find _Account > settings > Generate API key_. make sure to store the token as a secret in your repository. the secret should be called `CALYPTIA_API_KEY`
    calyptia-api-key: 
    # Make sure to change `config-location-glob` to a [glob](https://en.wikipedia.org/wiki/Glob_(programming)) that points to your `fluentd` and `Fluent Bit` configuration within the repository. you can use [this page](https://globster.xyz/) to make sure your glob will match the necessary files. (example `*.conf`)'
    config-location-glob: `fluent-bit.conf`
    # Indicates whether to follow symbolic links
    follow-symbolic-links: # optional, default is true

